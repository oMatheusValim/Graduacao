# Implemente uma classe chamada Ponto que dever치 representar um ponto no plano cartesiano, com os seguintes atributos:
# x: A coordenada x do ponto.
# y: A coordenada y do ponto.

# A classe dever치 conter o seguinte m칠todo:
# calculardistancia(outroponto): M칠todo que recebe outro objeto do tipo Ponto e calcula a dist칙ncia entre o ponto atual e o ponto recebido, usando a f칩rmula de calcular dist칙ncia:

# Subtra칞칚o das coordenadas:
# Subtra칤mos as coordenadas 洧논2 e 洧논1 para encontrar a diferen칞a entre as coordenadas x: (洧논2 - 洧논1)
# Subtra칤mos as coordenadas y2 e y1 para encontrar a diferen칞a entre as coordenadas y: (y2 - y1)

# Eleva칞칚o ao quadrado:
# Eleve ao quadrado os resultados dessas subtra칞칫es para garantir que o valor seja positivo

# Soma dos quadrados:
# Some os resultados dos quadrados

# Raiz quadrada:
# Tire a raiz quadrada da soma para obter a dist칙ncia final

# O programa dever치 receber as coordenadas de dois pontos no plano cartesiano e calcular a dist칙ncia entre eles.
# Formato de Entrada: 
# Quatro n칰meros inteiros, representando as coordenadas dos dois ponto (洧논1 - y1) e (洧논2 - y1) nesta ordem

# Formato de Sa칤da: Exiba a dist칙ncia entre os dois pontos no formato:
# Dist칙ncia: [valor]

# Exemplo de Entrada
# 3
# 4
# 7
# 1

# Exemplo de Sa칤da
# Dist칙ncia: 5.0

class Ponto(object):
    def __init__(self, xa, ya, xb, yb):
        self.xa = xa
        self.ya = ya
        self.xb = xb
        self.yb = yb
    
    def calculardistancia(self):
        return ((self.xa - self.xb)**2 + (self.ya - self.yb)**2)**0.5
    
xa = float(input())
ya = float(input())
xb = float(input())
yb = float(input())
result = Ponto(xa, ya, xb, yb)
print(f'Dist칙ncia: {result.calculardistancia()}')