# Implemente uma classe chamada Triangulo com os seguintes atributos:
# lado1: Comprimento do primeiro lado.
# lado2: Comprimento do segundo lado.
# lado3: Comprimento do terceiro lado.

# A classe dever√° conter os seguintes m√©todos:
# verificar_validez(): Verifica se os tr√™s lados formam um tri√¢ngulo v√°lido, ou seja, se a soma de dois lados √© sempre maior que o terceiro.
# calcular_perimetro(): Retorna o per√≠metro do tri√¢ngulo, que √© a soma dos tr√™s lados.
# calcular_area(): Calcula e retorna a √°rea do tri√¢ngulo usando a f√≥rmula simplificada abaixo.

# C√°lculo da √°rea:
# Primeiro, calcule o semi-per√≠metro ùë†, que √© a soma dos tr√™s lados dividida por 2: ùë† =(ùëôùëéùëëùëú1 + ùëôùëéùëëùëú2+ ùëôùëéùëëùëú3)/2
# ‚ÄãEm seguida, a √°rea do tri√¢ngulo √© calculada da seguinte forma: ùê¥ =(ùë†‚ãÖ(ùë†‚àíùëôùëéùëëùëú1)‚ãÖ(ùë†‚àíùëôùëéùëëùëú2)‚ãÖ(ùë†‚àíùëôùëéùëëùëú3))^0.5
# O uso do ^0.5 representa a raiz quadrada de toda a express√£o.

# O programa dever√° receber os valores dos tr√™s lados do tri√¢ngulo e, se os lados formarem um tri√¢ngulo v√°lido, dever√° exibir:
# Que o tri√¢ngulo √© v√°lido.
# O per√≠metro do tri√¢ngulo.
# A √°rea do tri√¢ngulo.

# Se os lados n√£o formarem um tri√¢ngulo v√°lido, o programa dever√° exibir uma mensagem indicando que o tri√¢ngulo √© inv√°lido.

# Formato de Entrada:
# Tr√™s n√∫meros representando os lados do tri√¢ngulo.

# Formato de Sa√≠da:
# Se o tri√¢ngulo for v√°lido, exiba:
# Tri√¢ngulo v√°lido Per√≠metro: [valor] √Årea: [valor]

# Caso contr√°rio, exiba:
# Tri√¢ngulo inv√°lido

# Exemplo de Entrada
# 3
# 4
# 5

# Exemplo de Sa√≠da
# Tri√¢ngulo v√°lido
# Per√≠metro: 12.0
# √Årea: 6.0

class Triangulo(object):
    def __init__(self, lado1, lado2, lado3):
        self.lado1 = lado1
        self.lado2 = lado2
        self.lado3 = lado3
        
    def verificar_validez(self):
        if self.lado1 + self.lado2 > self.lado3 and self.lado1 + self.lado3 > self.lado2 and self.lado3 + self.lado2 > self.lado1:
            return True
        else: 
            return False
        
    def calcular_perimetro(self):
        return self.lado1 + self.lado2 + self.lado3
    
    def calcular_area(self):
        semi_perimetro = self.calcular_perimetro() / 2
        return (semi_perimetro * (semi_perimetro - self.lado1) * (semi_perimetro - self.lado2) * (semi_perimetro - self.lado3)) ** 0.5 
    
        
lado1 = float(input())
lado2 = float(input())
lado3 = float(input())
result = Triangulo(lado1, lado2, lado3)
if  result.verificar_validez() is True:
    print(f'Tri√¢ngulo v√°lido\nPer√≠metro: {result.calcular_perimetro():.1f}\n√Årea: {result.calcular_area()}')
else:
    print('Tri√¢ngulo inv√°lido')